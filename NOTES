

reduce .frames[] as $f ({a:[],i:0,s:0}; ($f.end_of_header.block_size? // $f.block_size) as $bs | {a: (.a+[[.i,.s]]), i:(.i+1), s:(.s+$bs)} ) | .a

foreach .frames[] as $f ({i:0,fs:0}; ($f.end_of_header.block_size? // $f.block_size) as $bs | {i:(.i+1),fs:(.fs+$bs)}; {i:.i,first_sample:.fs,frame:$f}) | "\(.i): \(.frame.end_of_header.frame_number // "NA"): \(.first_sample)" | println

ffmpeg test files archive

mp3: last frame truncated? can happen if frame does not use all bits?
"If there are more Huffman code bits than necessary
to decode 576 values they are regarded as stuffing bits and discarded. When
there are less than 576 frequency lines, Huffman code has to initiate a zero
padding to compensate the lack of data. " is why ffmpeg is ok with it?

flac: frame number discontinuity: [.frames[] | .end_of_header.frame_number] as $l | [range(($l | length) - 1) | $l[.+1]-$l[.] | select(. != 1)]

flac: samples: [.frames[] | .end_of_header.block_size // .block_size][-9:-1] | add

GPS coordinate in EXIF data:
'.. | select(.type == "mdat")._bytes[0x1a:] | tiff | .. | select(.tag._symbol == "GPSInfo") | [.. | select(.tag._symbol | . ==  "GPSLatitude" or . == "GPSLongitude") | [.values[].float] | .[0] + .[1]/60 + .[2]/3600] | join(",")'
59.70330833333334,12.856802777777778


dump: linewrap smart texts etc if width is known?
https://github.com/charmbracelet/glow/blob/master/console_windows.go

fqfuse

MTTL id3v2 footer?

jq parser..

field("bla";u(32))

struct("bla";
  field("as";u(32))
  , 
)

123 as $var | repl
 . as $bla | scopedump | .["$bla"]


[1 | scope] empty string in list

gojq ast as json?

watch expr?


DONE .frames[-20:-0][].block_size : panic

[.frames[-16:][] | (.end_of_header.block_size._value // .block_size._value)] | add

hex, binary, 

ffmpeg -f lavfi -i sine -ac 2 -c:a flac -strict experimental -f mp4 -t 50ms flac.mp4


own FqInterace? function ineterface?


repl in jq, expose parse/run?

go run cmd/fq/main.go -n - '["digraph formats {"] + [[formats[] | . as $f | .dependencies | flatten? | .[] | [$f.name, .]] + [formats[] | . as $f | .groups | flatten? | .[] | [., $f.name]] | .[] | join(" -> ")] + ["}"] | join("\n")' | dot -Tsvg -o formats.svg

replace dot function with jq to dot formatting somehow?

Run should know if autocompleting? dont allow open() etc

go run cmd/fq/main.go flac.mkv '"fLaC", (.. | select(._name == "metadatablock" and ._type == "struct")), (.. | select(.packet._description=="flac_frame" ) | .packet) | bits' > bla.flac
go run cmd/fq/main.go flac.mp4 '"fLaC", (.. | select(._name == "metadatablock" and ._type == "struct")), .tracks[0].samples[] | bits' > bla.flac


show error tree? errors?

flac md5 fix

ffmpeg -y -f lavfi -i testsrc -f lavfi -i sine -ac 2 -c:a libvorbis -t 5s test.webm

# mp4 track codecs
[.. | select(.type._value? == "stsd") | .reference[].type._value]
# apic picture data
.. | select(.id._value == "APIC") | .picture._bits
# sidx dump
.. | select(.type._value=="sidx") | .index_table | [.[] | {size: .size._value, duration: .duration._value}]
# what field is at bit position x?
.. | select(._type == "field" and ._range.start <= x and x < ._range.stop)
#
(echo -e "set term svg\nset output 'test.svg'\nplot '-'"; go run cmd/fq/main.go test.flac 'probe | .frame[] | [.end_of_header.frame_number._value, ._size] | join(" ")') | gnuplot

# mkv metadata tags
'[.. | select(.id._symbol == "Tags") | .. | select(.id._symbol == "SimpleTag") | {(.element[0].value._value): (.element[1].value._value)}] | add'


go build -gcflags="-d=ssa/check_bce/debug=1" boundscheck.go 
readbits:
_ = b[7] // bounds check hint to compiler; see golang.org/issue/14808









